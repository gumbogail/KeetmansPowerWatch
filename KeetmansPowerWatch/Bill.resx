<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAABNhJREFUeF7tms2LHFUUxVtFMX6BqAiu1IWLKG5Gu6oSE6PiwoXuRMSdbtSgovkH
        shSNQhYKk65XQdHNGNCVrly6Mm5UEF24E4If2FU1gh9o+W7nJEh7p7tf13vvdve7PzjQ0zN135lTk5d3
        unugKIqiKIqiKIqyToxH2RYJXyoxaavhg02Z11a7tckfwdNKDGzgT9Vl/kdj8o5Um+yvpiyexreVkNRl
        9pK9AX9fCP/iTSjzf+zzx/Fjim+6bnCJDfrV6eCn1Zr8ZHd8cCkuU3zQ7ey/oq3y97nA99CZ7vSRK3G5
        0odz7959dWOGnzAhz1Hx6S/vZddhjLIMu6PsZhvm2f+Hu5jsEfXL38zBWzBOcWE8Gt5mj5jfccE66vvm
        1PAOjFUWgcqVPdGcY8JcTmX+c2MOFBivzOJiweKC7CMtbPOZLli+pYVtBnsVLN/SwjbFogXLt7SwWZYo
        WL6VbmFbvmD5VoKFrW/B8q2kCpvHguVbm1/YvBcs37KFrR5lOexuFsEKlm9tYmELXbB8a6MKW6yC5Vtr
        X9ikCpZvrWVhW4GC5VvrU9hWp2D51hoUtlUrWL610oVtUrBM/u206Q3U6hW2lS9YvrVKhc2G/3BjsoY1
        GkC0DdDRtj117530/w2JHtNzY5N/xV0TRllDvztikCFmwarN8Hd7snpu1pGQvteW2fPRPNl1KAMsHxf7
        F3CMygpnzLcm4ZvsASw9F3rZI+JNsBlkx7B0eFCwTkwbCSlbhp7F8gtjb9hRblZAnaBssHwYJAoW7fnL
        NNFu5/HL6qr4mpsZSpQNZQQLfpkUrDL/mFs4pOoqfxEWnLHXvszNDKsAhU2yYLVVth82nGnLA3dxMyPo
        LGUGG/2QLlg/vnXkGlhx5idz8FpuZiT1L2yrULD63ADaCriZ0dSnsMUuWHtpTbeg/2iJwhazYM0TNVzY
        csZe/8r0PAk5vcMWs2AtInp5gY6UsLcwEsfQWQpW2LjFfIteXsByC2P/Fb/AzfItLCcHZ8q3aDuklxew
        5Fx2y+KhWFsolpSDMxVCk5tgsqOztqPJtmP/8mOFT8LScnCmQor2dWq4dMKhIyqJHtNzEns+YpCDM5WS
        EIMcnKmUhBjk4EylJMQgB2cqJSEGOThTKQkxyMGZ8il7rPyzMcPPbIt8rTHFM/bEc3hs7rl9/PZ913fb
        W5eT6DE911bF/fQzTVW8Ttecv5af60uIQQ7OVF/Re8A2yA+aMn/0h+2tq7CUM3StnfeY1ZnzM/n1+ghL
        ycGZWlYI6Y1me+tGjPcGzbQ39E3fNwLj5eBMLafi819P57dibDDoDaZ2lH3Be3AXxsrBmXLV2GQf9tlq
        XKG16rL4iPPiKoyUgzPlInr5QOKj391Osa822TecJxdhnBycKRe1Vf4ERkXH3vwnOU8uwig5OFNOemd4
        A0ZFp60O3cR6chBGycGZclHwT5PNAJ/yY30tKoySgzPlIowRg/PkIoyRgzPlIowRg/PkIoyRgzOVkhCD
        HJyplIQY5OBMpSTEIAdnKiUhBjk4UykJMcjBmUpJiEEOzlRKQgxycKZSEmKQgzOVkhCDHJyplIQY5OBM
        pSTEIAdnKiUhBjk4UykJMcjBmUpJiEEOzlRKQgxycKZSEmJQFEVRFEVRFEVRFEVRlDkMBv8C/pR6SHHG
        z1sAAAAASUVORK5CYII=
</value>
  </data>
</root>